#include<stdio.h>
#include<string.h>

typedef struct
{
	char d[50];
	char m[50];
	char a[50];
} conversor;

typedef struct
{
	int Dia;
	int Mes;
	int Anno;
} TFechaN;

typedef struct 
{
char DNI[50];
char nombre[50];
char apellido1[50];
char apellido2[50];
char COVID[50];
TFechaN FechaN;
conversor Nacimiento;
}paciente;

// funciones de organizacion
void presentacion     (void);
char eleccion         (void);
char Repetir          (void);
void Cierre           (void);

//funciones operativas
void agregarPaciente  (void);
void leerTodo         (void);





void main(){
	char opcion;
	FILE *g;    //para garantizar que se cree el txt, este proceso si bien es trivial o arcaico lo crea y lo cierra
	            //o en caso de que exista lo abre y lo cierra. No es necesario, pero nos brinda seguridad.
	g= fopen ("basedatos.txt","a");
    	fclose (g);
	
   do {
   	
	presentacion ();
	
	opcion = eleccion ();
    
    switch (opcion){
    
	case 'A':
	case 'a':
	
	agregarPaciente();
	
    		break;    
		
					
	case 'B':
	case 'b':
	
	leerTodo();
	
		break;	
		
		
	case 'C':
	case 'c':
	

	
		break;	
	
	
	case 'D':
	case 'd':
	

	
		break;
	
	default:
	puts ("No ha pulsado un caracter valido");
}

  opcion = Repetir ();

} while ((opcion == 's')  || (opcion == 'S'));

	Cierre ();
	
}


void presentacion (void)
{
	puts ("Este programa es una base de datos.\n\n");
	puts ("Por favor indique pulsando la letra correspondiente la operacion que desea realizar");
}

char eleccion (void)
{
	char l;
	puts ("A. Registrar paciente");
	puts ("B. Ver lista de pacientes");
	puts ("C. Ver datos de un paciente");
	puts ("D. Borrar paciente");
	scanf ("%c", &l);
	fflush (stdin);
	
	return l;
}

void agregarPaciente(void)
{
	
	    FILE*g;  
	    paciente p;
	    
	    printf("El paciente posee COVID19 (SI/NO) \n");
        gets (p.COVID);

	    printf("Ingrese el 1er apellido \n");
        gets (p.apellido1);
        
        fflush(stdin);
        printf("Ingrese el 2do apellido \n");
        gets (p.apellido2);
        
        fflush(stdin);
        printf("Ingrese el nombre \n");
        gets (p.nombre);
        
        fflush(stdin);
        printf("Ingrese el DNI \n");
        gets(p.DNI);
        
        fflush(stdin);
        printf("Ingrese el numero del dia de nacimiento \n");
        scanf("%d",&p.FechaN.Dia);
	
//los siguientes bucles garantizan de que las fechas ingresadas contengan cierta coherencia
//como puede ser el ingreso de dias negativos o una cantidad absurda como 32

        	while(p.FechaN.Dia>31 || p.FechaN.Dia<1){
        		printf("El dia de nacimiento ingresado no es valido, porfavor reintrduzcalo \n");
        		scanf("%d",&p.FechaN.Dia);
			}
			
        fflush(stdin);
        printf("Ingrese el numero del mes de nacimiento \n");
        scanf("%d",&p.FechaN.Mes);
        
        	if(p.FechaN.Dia>29){
        		while(p.FechaN.Mes==2){
        			printf("El mes de nacimiento ingresado no es valido, porfavor reintrduzcalo \n");
        			scanf("%d",&p.FechaN.Mes);
				}
			}
			if(p.FechaN.Dia>30){
        		while(p.FechaN.Mes==2 || p.FechaN.Mes==4 || p.FechaN.Mes==6 || p.FechaN.Mes==9 || p.FechaN.Mes==11 ){
        			printf("El mes de nacimiento ingresado no es valido, porfavor reintrduzcalo \n");
        			scanf("%d",&p.FechaN.Mes);
				}
			}
		
        	while(p.FechaN.Mes>12 || p.FechaN.Mes<1){
        		printf("El mes de nacimiento ingresado no es valido, porfavor reintrduzcalo \n");
        		scanf("%d",&p.FechaN.Mes);
			}
        
        fflush(stdin);
        printf("Ingrese el numero del a%co de nacimiento \n",164);
        scanf("%d",&p.FechaN.Anno);

			while(p.FechaN.Anno<1900 || p.FechaN.Anno>2020){
				printf("El a%co de nacimiento ingresado no es valido, porfavor reintrduzcalo \n",164);
        		scanf("%d",&p.FechaN.Anno);
			}
    
    //estas funciones convierten int a string, lo que nos ayuda a que con printf el programa identifique correctamente
    // cada seccion ya que para funciones como la de buscar paciente nos parecio indispensable al no encontrar otra solucion.
    			sprintf(p.Nacimiento.d,"%i",p.FechaN.Dia);
			sprintf(p.Nacimiento.m,"%i",p.FechaN.Mes);
			sprintf(p.Nacimiento.a,"%i",p.FechaN.Anno);
    
    
    
        g=fopen("basedatos.txt","a");
        
        fprintf(g,"%s  ",p.nombre);
        fprintf(g,"%s  ",p.apellido1);
        fprintf(g,"%s  ",p.apellido2);
        fprintf(g,"%s  ",p.Nacimiento.d);
        fprintf(g,"%s  ",p.Nacimiento.m);
        fprintf(g,"%s  ",p.Nacimiento.a);
        fprintf(g,"%s  ",p.DNI);
        fprintf(g,"%s\n",p.COVID);
        
        fclose(g);
}

void leerTodo (void){
	FILE* g;
	paciente p;
	char aux [100];
	int j=0;
	int i;
	
	//Esto calcula el numero de pacientes, es decir el numero de lineas, y
	//lo almacen en j. Enla siguiente parte,en el bucle for,nos daba error
	//debido a que la ultima linea se leia dos veces por lo que agregamos el
	//if que puede verse que evita que la ultima linea se cuente 2 veces
	
	g=fopen("basedatos.txt","r");
	while(!feof(g)){	
		fgets(aux,100,g);
			if(!feof(g)){
				j++;
			}
	}
fclose(g);
	
	g=fopen("basedatos.txt","r"); //si bien es repetitivo no encontramos mejor solucion que reabrir el fichero
	
	printf("Nombre  || Apellidos  ||  Nacimiento  ||  DNI  ||  COVID");
		
	for(i=0;i<j;i++){
//se leen los datos del txt y luego en el printf se imprimen en pantalla para el usuario
		fscanf(g,"%s",p.nombre);
		fscanf(g,"%s",p.apellido1);
		fscanf(g,"%s",p.apellido2);
		fscanf(g,"%s",p.Nacimiento.d);
    		fscanf(g,"%s",p.Nacimiento.m);
    		fscanf(g,"%s",p.Nacimiento.a);
		fscanf(g,"%s",p.DNI);
		fscanf(g,"%s",p.COVID);


    		printf("\n%s  ",p.nombre);
		printf("%s ",p.apellido1);
		printf("%s  ",p.apellido2);
		printf("%s/",p.Nacimiento.d);
    		printf("%s/",p.Nacimiento.m);
    		printf("%s \t",p.Nacimiento.a);
		printf("%s \t",p.DNI);
		printf("%s\n\n",p.COVID);
	}
	
    fclose(g);
}


char Repetir (void){
	char letra;
	printf ("\n\250Desea realizar otra operaci\242n?:   ");
	scanf ("%c", &letra);
	fflush (stdin);
	
	return letra;
}


void Cierre (void){
puts ("\n\nGracias por consultar la base de datos...\n\n");
}

